1. What is git ?
->
Git is a version control system that track charges in any set of coputer files , usally used for co-ordinating work among programmers
who are collaboratively source code during software development . It's goals include speed , data integrity and
distribted , non-linear workflows.

2. What is github ?
->
GitHub, Inc.is a platform and cloud-based service for software development and version control using Git, 
allowing developers to store and manage their code .

3. What is git clone ?
->
git clone is primarily used to point to an existing repository and make a clone or copy o that repository at in a new directory,
at another location.

[*Command:- git clone <repository_url>]

4. What is git status ?
->
The git status command displays the state of the working directory and the staging area.
It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git. 

[*Command:- git status]

5. What is git staging area ?
->
In technical terms, the staging area is the middle ground between what you have done to your files 
(also known as the working directory) and what you had last committed (the HEAD commit). 
As the name implies, the staging area gives you space to prepare (stage) the changes that will be reflected on the next commit.

6. What is git add ?
->
The git add command adds new or changed files in your working directory to the Git staging area.
git add is an important command - without it, no git commit would ever do anything.

[**Command:-  1. Adding single file-> git add <filename>
              2. Adding multiple file-> git add <filename1> <filename2> ....
              3. Adding all the files-> git add -A || git add .] 

7. What is git restore ?
->
The "restore" command helps to unstage or even discard uncommitted local changes.
On the one hand, the command can be used to undo the effects of git add and unstage changes you have previously added to the Staging Area.             

[** Command:- git restore --staged <filename>]

8. What is revert and reset in git ?
->
You can also think of git "revert" is a tool for undoing committed changes.

[** Command:- git revert <commit_id> ]

9. What is the use of git commit ?
->
The "commit" command is used to save your changes to the local repository.
Note that you have to explicitly tell Git which changes you want to include in a commit before running the "git commit" command.
This means that a file won't be automatically included in the next commit just because it was changed.

[**Command:- git commit -m <"message">]

10. What is git log ? 
->
The git log command displays all the commits in a repository's history.

**Command:- git log || git log --oneline (it shows all the commits in a single line)

11. What is git push ?
-> 
The git push command is used to upload local repository content to a remote repository. 

12. 11. What is git pull ?
->
The git pull command is used to fetch and download content from a remote repository and 
immediately update the local repository to match that content .

[*Command:- git pull]

13. What is git init ?
->
The git init command creates a new Git repository. It can be used to convert an existing, 
unversioned project to a Git repository or initialize a new, empty repository. Most other Git commands 
are not available outside of an initialized repository, so this is usually the first command you'll run in a new project.

[*Command:- git init]

14. What is git branch ?
->
Git branches are effectively a pointer to a snapshot of your changes. When you want to add a new feature or fix
a bug—no matter how big or how small—you spawn a new branch to encapsulate your changes.

[** Command :- 
               git branch
			   git branch (branch_name) {Create Branch}	
			   git push -u origin main (branch_name) {Command to push branch}
]

15. What is git checkout ?
->
The git checkout command lets you navigate between the branches created by git branch . Checking out a branch updates the files 
in the working directory to match the version stored in that branch, and it tells Git to record all new commits on that branch.

16. What is merge conflict ?
->
Merge conflicts occur when competing changes are made to the same line of a file, or when one person edits a file 
and another person deletes the same file.

17. **Whenever we push the code before that we have to take the pull from the parent repository.
      After creating a batch we have to publish it by using a comman called > git push -u origin remote (repository_name) brach_name
	  After merging the branch take pull and push.
	  Before marging we should switch the branch to which we are merging.
	
18. what is git merge ?
->  The git merge command facilitates you to take the data created by git branch and integrate them into a single branch. 
Git merge will associate a series of commits into one unified history. Generally, git merge is used to combine two branches.
	